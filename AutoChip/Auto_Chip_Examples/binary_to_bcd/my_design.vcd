$date
	Fri Sep 19 22:08:40 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 8 ! bcd_output [7:0] $end
$var reg 5 " binary_input [4:0] $end
$var reg 8 # expected_bcd [7:0] $end
$var reg 5 $ test_binary [4:0] $end
$var integer 32 % clocks [31:0] $end
$var integer 32 & errors [31:0] $end
$var integer 32 ' i [31:0] $end
$scope module top_module1 $end
$var wire 5 ( binary_input [4:0] $end
$var wire 4 ) units [3:0] $end
$var wire 4 * tens [3:0] $end
$var wire 8 + bcd_output [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b1 %
b0 $
b0 #
b0 "
b0 !
$end
#10000
b1 !
b1 +
b1 )
b10 %
b1 #
b1 "
b1 (
b1 $
b1 '
#20000
b10 !
b10 +
b10 )
b11 %
b10 #
b10 "
b10 (
b10 $
b10 '
#30000
b11 !
b11 +
b11 )
b100 %
b11 #
b11 "
b11 (
b11 $
b11 '
#40000
b100 !
b100 +
b100 )
b101 %
b100 #
b100 "
b100 (
b100 $
b100 '
#50000
b101 !
b101 +
b101 )
b110 %
b101 #
b101 "
b101 (
b101 $
b101 '
#60000
b110 !
b110 +
b110 )
b111 %
b110 #
b110 "
b110 (
b110 $
b110 '
#70000
b111 !
b111 +
b111 )
b1000 %
b111 #
b111 "
b111 (
b111 $
b111 '
#80000
b1000 !
b1000 +
b1000 )
b1001 %
b1000 #
b1000 "
b1000 (
b1000 $
b1000 '
#90000
b1001 !
b1001 +
b1001 )
b1010 %
b1001 #
b1001 "
b1001 (
b1001 $
b1001 '
#100000
b0 )
b10000 !
b10000 +
b1 *
b1011 %
b10000 #
b1010 "
b1010 (
b1010 $
b1010 '
#110000
b10001 !
b10001 +
b1 )
b1100 %
b10001 #
b1011 "
b1011 (
b1011 $
b1011 '
#120000
b10010 !
b10010 +
b10 )
b1101 %
b10010 #
b1100 "
b1100 (
b1100 $
b1100 '
#130000
b10011 !
b10011 +
b11 )
b1110 %
b10011 #
b1101 "
b1101 (
b1101 $
b1101 '
#140000
b10100 !
b10100 +
b100 )
b1111 %
b10100 #
b1110 "
b1110 (
b1110 $
b1110 '
#150000
b10101 !
b10101 +
b101 )
b10000 %
b10101 #
b1111 "
b1111 (
b1111 $
b1111 '
#160000
b10110 !
b10110 +
b110 )
b10001 %
b10110 #
b10000 "
b10000 (
b10000 $
b10000 '
#170000
b10111 !
b10111 +
b111 )
b10010 %
b10111 #
b10001 "
b10001 (
b10001 $
b10001 '
#180000
b11000 !
b11000 +
b1000 )
b10011 %
b11000 #
b10010 "
b10010 (
b10010 $
b10010 '
#190000
b11001 !
b11001 +
b1001 )
b10100 %
b11001 #
b10011 "
b10011 (
b10011 $
b10011 '
#200000
b0 )
b100000 !
b100000 +
b10 *
b10101 %
b100000 #
b10100 "
b10100 (
b10100 $
b10100 '
#210000
b100001 !
b100001 +
b1 )
b10110 %
b100001 #
b10101 "
b10101 (
b10101 $
b10101 '
#220000
b100010 !
b100010 +
b10 )
b10111 %
b100010 #
b10110 "
b10110 (
b10110 $
b10110 '
#230000
b100011 !
b100011 +
b11 )
b11000 %
b100011 #
b10111 "
b10111 (
b10111 $
b10111 '
#240000
b100100 !
b100100 +
b100 )
b11001 %
b100100 #
b11000 "
b11000 (
b11000 $
b11000 '
#250000
b100101 !
b100101 +
b101 )
b11010 %
b100101 #
b11001 "
b11001 (
b11001 $
b11001 '
#260000
b100110 !
b100110 +
b110 )
b11011 %
b100110 #
b11010 "
b11010 (
b11010 $
b11010 '
#270000
b100111 !
b100111 +
b111 )
b11100 %
b100111 #
b11011 "
b11011 (
b11011 $
b11011 '
#280000
b101000 !
b101000 +
b1000 )
b11101 %
b101000 #
b11100 "
b11100 (
b11100 $
b11100 '
#290000
b101001 !
b101001 +
b1001 )
b11110 %
b101001 #
b11101 "
b11101 (
b11101 $
b11101 '
#300000
b0 )
b110000 !
b110000 +
b11 *
b11111 %
b110000 #
b11110 "
b11110 (
b11110 $
b11110 '
#310000
b110001 !
b110001 +
b1 )
b100000 %
b110001 #
b11111 "
b11111 (
b11111 $
b11111 '
#320000
b100000 '
